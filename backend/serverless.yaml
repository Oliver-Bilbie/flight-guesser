service: flight-guesser

plugins:
  - serverless-iam-roles-per-function
  - serverless-python-requirements

custom:
  pythonRequirements:
    slim: true
    useDownloadCache: false
    useStaticCache: false
    usePipenv: false
    layer:
      name: flight-guesser-requirements-layer
      description: "Python dependencies for flight guesser services"
      compatibleRuntimes:
        - python3.11

provider:
  name: aws
  region: eu-west-1
  runtime: python3.11
  httpApi:
    cors:
      allowedOrigins:
        - https://flight-guesser.net
        - https://www.flight-guesser.net
        - https://dev.flight-guesser.net
      allowedMethods:
        - GET
        - POST
        - PUT

functions:
  get_airports:
    handler: src/service/api.get_airports
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 128
    events:
      - httpApi:
          path: /airports
          method: get
    timeout: 10
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

  handle_turn:
    handler: src/service/api.handle_turn
    environment:
      PLAYER_DATA_TABLE: flight-guesser-player-table-${env:STAGE}
      LOBBY_DATA_TABLE: flight-guesser-lobby-table-${env:STAGE}
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 128
    events:
      - httpApi:
          path: /turn
          method: post
    timeout: 25
    iamRoleStatementsName: flight-guesser-handle-turn-role-${env:STAGE}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-lobby-table-${env:STAGE}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

  create_lobby:
    handler: src/service/api.create_lobby
    environment:
      PLAYER_DATA_TABLE: flight-guesser-player-table-${env:STAGE}
      LOBBY_DATA_TABLE: flight-guesser-lobby-table-${env:STAGE}
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 128
    events:
      - httpApi:
          path: /lobby
          method: put
    timeout: 25
    iamRoleStatementsName: flight-guesser-create-lobby-role-${env:STAGE}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-lobby-table-${env:STAGE}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

  join_lobby:
    handler: src/service/api.join_lobby
    environment:
      PLAYER_DATA_TABLE: flight-guesser-player-table-${env:STAGE}
      LOBBY_DATA_TABLE: flight-guesser-lobby-table-${env:STAGE}
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 128
    events:
      - httpApi:
          path: /lobby
          method: post
    timeout: 25
    iamRoleStatementsName: flight-guesser-join-lobby-role-${env:STAGE}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}/index/LobbyIndex
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-lobby-table-${env:STAGE}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

  get_lobby_scores:
    handler: src/service/api.get_lobby_scores
    environment:
      PLAYER_DATA_TABLE: flight-guesser-player-table-${env:STAGE}
      LOBBY_DATA_TABLE: flight-guesser-lobby-table-${env:STAGE}
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 128
    events:
      - httpApi:
          path: /lobby/{lobby_id}
          method: get
    timeout: 25
    iamRoleStatementsName: flight-guesser-get-lobby-scores-role-${env:STAGE}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}/index/LobbyIndex
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-lobby-table-${env:STAGE}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

  delete_old_data:
    handler: src/service/api.delete_old_data
    environment:
      PLAYER_DATA_TABLE: flight-guesser-player-table-${env:STAGE}
      LOBBY_DATA_TABLE: flight-guesser-lobby-table-${env:STAGE}
    package:
      individually: true
      include:
        - src/service/*
      exclude:
        - ./**
    memorySize: 256
    events:
      - schedule: cron(0 12 ? * * *)
    timeout: 25
    iamRoleStatementsName: flight-guesser-delete-data-role-${env:STAGE}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-player-table-${env:STAGE}
      - Effect: Allow
        Action:
          - dynamodb:Scan
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:eu-west-1:082862148481:table/flight-guesser-lobby-table-${env:STAGE}
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
